<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context">

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>


    <context:annotation-config/>
    <context:component-scan base-package="edu.zju.reservation"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          p:driverClass="com.mysql.jdbc.Driver"
          p:jdbcUrl="jdbc:mysql://10.82.60.128:3306/reservation?characterEncoding=UTF-8"
          p:user="root"
          p:password="root"
          p:maxPoolSize="40"
          p:minPoolSize="2"
          p:initialPoolSize="2"
          p:maxIdleTime="180"
          p:testConnectionOnCheckout="true"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource">
        <property name="mappingResources">
            <list>
                <!--<value>edu.cqu.no1.domain.TResultDistribut</value>-->
                <value>/mapping/ResClass.hbm.xml</value>
                <value>/mapping/ResConfig.hbm.xml</value>
                <value>/mapping/ResManager.hbm.xml</value>
                <value>/mapping/ResReservation.hbm.xml</value>
                <value>/mapping/ResStudent.hbm.xml</value>
                <value>/mapping/ResTimequantum.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://10.82.60.128:3306/tree_hole</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="jsps/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>



<!--
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd    
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd    
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	
	&lt;!&ndash; 支持spring3.0新的mvc注解 &ndash;&gt;
	<mvc:annotation-driven />
	
	&lt;!&ndash; 启动Spring MVC的注解功能，完成请求和注解POJO的映射 &ndash;&gt;
&lt;!&ndash;	  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="cacheSeconds" value="0" />  
        <property name="messageConverters">  
            <list>  
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>  
            </list>  
        </property>
    </bean>&ndash;&gt;

	&lt;!&ndash; 让spring 去读取指定路径下的资源文件 &ndash;&gt;
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:db.properties"/>
	</bean>

	&lt;!&ndash; 配置c3p0连接池 &ndash;&gt;
	<bean id="c3p0Source" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driverClass}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<property name="minPoolSize" value="${minPoolSize}" />
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<property name="maxIdleTime" value="${maxIdleTime}" />
	</bean>

	&lt;!&ndash; 配置SessionFactory &ndash;&gt;
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="c3p0Source" />
		<property name="mappingResources">
			<list>
				<value>/edu/zju/reservation/domain/ResClass.hbm.xml</value>
				<value>/edu/zju/reservation/domain/ResConfig.hbm.xml</value>
				<value>/edu/zju/reservation/domain/ResManager.hbm.xml</value>
				<value>/edu/zju/reservation/domain/ResReservation.hbm.xml</value>
				<value>/edu/zju/reservation/domain/ResStudent.hbm.xml</value>
				<value>/edu/zju/reservation/domain/ResTimequantum.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${show_sql}</prop>
				<prop key="hibernate.format_sql">${format_sql}</prop>
			</props>
		</property>
	</bean>


	&lt;!&ndash; 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 &ndash;&gt;
	<context:component-scan base-package="edu.zju.reservation" />

	&lt;!&ndash; 配置拦截器 &ndash;&gt;
	<mvc:interceptors>
		&lt;!&ndash; 对管理员模块进行拦截 &ndash;&gt;
		<mvc:interceptor>
			<mvc:mapping path="/admin.do" />
			&lt;!&ndash;<mvc:mapping path="/test/*" />&ndash;&gt;
			<bean class="edu.zju.reservation.interceptor.AdminInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	&lt;!&ndash; 处理文件上传 &ndash;&gt;
	<bean id="multipartResolver"  
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >  
	    <property name="defaultEncoding" value="gbk"/> &lt;!&ndash; 默认编码 (ISO-8859-1) &ndash;&gt;
	    <property name="maxInMemorySize" value="10240"/> &lt;!&ndash; 最大内存大小 (10240)&ndash;&gt;
	    &lt;!&ndash;<property name="uploadTempDir" value="/upload/"/> &lt;!&ndash; 上传后的目录名 (WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE) &ndash;&gt;  &ndash;&gt;
	    <property name="maxUploadSize" value="-1"/> &lt;!&ndash; 最大文件大小，-1为无限止(-1) &ndash;&gt;
	</bean>
	
	
	&lt;!&ndash;对模型视图名称的解析，即在模型视图名称添加前后缀 &ndash;&gt;
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:suffix=".jsp" p:prefix="jsps/">
		&lt;!&ndash; 如果使用jstl的话，配置下面的属性 &ndash;&gt;
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>


</beans>
-->
